name: Test

on: 
  push: 
    branches:
      - master
      - develop
  pull_request:

env:
  NODE_VERSION: "16"
  NODE_ENV: test
  POSTGRES_PASSWORD: 1234
  REDIS_VERSION: "7"
  REDIS_PORT: 6379

jobs:
  install_dependancies:
    name: Install Dependancies

    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node npm
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-google-scraper-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-google-scraper-node-

      - name: Install dependencies
        run: npm install

  lint_codebase:
    name: Linting

    needs: install_dependancies

    runs-on: ubuntu-latest

    timeout-minutes: 10

    steps: 
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node npm
        uses: actions/cache@v2
        with:
          path: node_modules/
          key: ${{ runner.os }}-google-scraper-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-google-scraper-node-

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

  unit_test:
    name: Run Unit tests

    needs: lint_codebase

    runs-on: ubuntu-latest

    timeout-minutes: 15
    
    services:
      db:
        image: postgres:14.4
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

    steps: 
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node npm
        uses: actions/cache@v2
        with:
          path: node_modules/
          key: ${{ runner.os }}-google-scraper-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-google-scraper-node-
      
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ env.REDIS_VERSION }}
          redis-port: ${{ env.REDIS_PORT }}

      - name: Install dependencies
        run: npm install

      - name: Initialize Database
        run: npm run db:create

      - name: Run tests
        run: npm test

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: coverage
          path: coverage/

  ui_test:
    name: Run UI tests

    needs: lint_codebase

    runs-on: ubuntu-latest

    timeout-minutes: 20

    services:
      db:
        image: postgres:14.4
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

    steps: 
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node npm
        uses: actions/cache@v2
        with:
          path: node_modules/
          key: ${{ runner.os }}-google-scraper-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-google-scraper-node-

      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ env.REDIS_VERSION }}
          redis-port: ${{ env.REDIS_PORT }}

      - name: Initialize Database
        run: npm run db:create

      - name: Run UI tests
        uses: cypress-io/github-action@v4.1.0
        timeout-minutes: 10
        with:
          build: npm run build
          start: npm start
          wait-on: 'http://localhost:3000'
          browser: chrome

      - name: Upload Test Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: cypress
          path: |
            cypress/videos/
            cypress/screenshots/
